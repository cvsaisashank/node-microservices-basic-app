apiVersion: apps/v1 # Deployment object is in the bucker app/v1
kind: Deployment # Tell K8 what type of object we are planning to create
metadata: 
  name: posts-depl # name of the deployment.
spec: # spec section will tell how the deployment should behave
  replicas: 1 # number of pods we want to create running some particular image.
  selector: # Selector and template's metadata are working together.
    matchLabels:
      app: posts # label is app: posts
  template:
    metadata:
      labels:
        app: posts
    spec: # This is Pod spec or simillar to a Pod config file
      containers: 
        - name: posts # Container name is posts.
          image: cvenkata32/posts:latest # Build the container inside the Pod using this docker-image
---
apiVersion: v1
kind: Service
metadata:
  name: posts-clusterip-srv
spec:
  type: ClusterIP # create a ClusterIP service.This is the default value for Kubernetes if we do not mention it.
  selector: # This tells what PODS this cluster-ip service has access to
    app: posts
  ports: # Mention all the ports that we wan to expose on a target Pod
    - name: posts  # name of the Port, we can give any name.
      protocol: TCP
      port: 4000 # this is for Cluster IP service to listen to in k8 cluster
      targetPort: 4000 # this is for Pod-container port. this should be the same as we give in our source code in `listen` api call.